/* https://github.com/Lazzzer00/Best-CSS-Reset-2024 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

body,
html {
  height: 100%;
  scroll-behavior: smooth;
}

button {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  border: none;
  background-color: transparent;
  outline: 0;
  padding: 0;
  cursor: pointer;
}

ul[role=list],
ol[role=list] {
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth;
}

a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

img,
picture,
svg,
video,
canvas {
  max-width: 100%;
  height: auto;
}

img,
picture,
svg,
video,
canvas {
  vertical-align: middle;
}

img,
picture,
svg,
video,
canvas {
  font-style: italic;
}

img,
picture,
svg,
video,
canvas {
  background-repeat: no-repeat;
  background-size: cover;
}

input,
button,
textarea,
select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
    transition: none;
  }
}
@font-face {
  font-family: "Roboto Slab Regular";
  src: local("Roboto Slab"), url("../fonts/roboto-slab/RobotoSlab-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto Slab bold";
  src: local("Roboto Slab"), url("../fonts/roboto-slab/RobotoSlab-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto Regular";
  src: local("Roboto"), local("Droid Sans"), url("../fonts/roboto/Roboto-Regular.woff") format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto Light";
  src: local("Roboto Light"), local("Droid Sans"), url("../fonts/roboto/Roboto-Light.woff") format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto Medium";
  src: local("Roboto Medium"), local("Droid Sans"), url("../fonts/roboto/Roboto-Medium.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto Bold";
  src: local("Roboto Bold"), local("Droid Sans"), url("../fonts/roboto/Roboto-Bold.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
:root {
  --base-color: hsl(210, 29%, 24%);
  --primary-color: hsl(168, 76%, 36%);
  --secondary-color: hsl(48, 89%, 50%);
  --white: hsl(0, 0%, 100%);
  --clouds: hsl(192, 15%, 94%);
  --silver: hsl(204, 8%, 76%);
  --size: 40em;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a:focus-visible,
button:focus-visible,
input:focus-visible,
select:focus-visible {
  outline: 2px dotted hsl(204, 8%, 76%);
  outline-offset: 2px;
}

button {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  border: none;
  background-color: transparent;
  outline: 0;
  padding: 0;
  cursor: pointer;
}

fieldset {
  border: none;
}

input {
  padding: 7px 10px;
  border-radius: 0.325rem;
  border: 1px solid hsl(204, 8%, 76%);
}
input#name {
  text-transform: capitalize;
}

/******************/
body {
  height: 100vh;
  font-family: "Roboto Regular", sans-serif;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: start;
      justify-content: flex-start;
  -ms-flex-direction: column;
      flex-direction: column;
  row-gap: 3rem;
  background-color: hsl(204, 70%, 53%);
}

header {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center;
  box-shadow: inset 0 0 10px 1px rgba(0, 0, 0, 0.05);
}

.round {
  position: relative;
  width: 10rem;
  height: 10rem;
  border-radius: 50%;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  color: hsl(0, 0%, 100%);
  background-color: hsl(48, 89%, 50%);
}
.round_login {
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  top: -18%;
}

h1 {
  font-family: "Roboto Slab bold", serif;
  font-size: 3rem;
  color: hsl(0, 0%, 100%);
  text-align: center;
  letter-spacing: 5px;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.25);
}

h2 {
  font-family: "Roboto Medium", sans-serif;
  color: hsl(210, 29%, 29%);
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.05);
}

.btn {
  margin-top: 1rem;
  padding: 0.5rem 1rem;
  border-radius: 0.325rem;
  color: hsl(0, 0%, 100%);
  background-color: hsl(282, 44%, 47%);
  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.25);
  width: 100%;
  transition: background-color 300ms ease-in-out;
}
.btn:hover {
  background-color: hsl(24, 100%, 41%);
}

.form-group {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  margin-top: 1rem;
}

.error {
  font-size: 0.8rem;
  margin-left: 0.325rem;
}

.hide {
  visibility: hidden;
}

.show {
  visibility: visible;
}

@media (max-width: 599px) {
  main {
    width: 80%;
  }
}

.choose_quiz {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
}
.choose_quiz .btn-choose {
  font-size: 2rem;
}
@media (max-width: 599px) {
  .choose_quiz .btn-choose {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center;
    -moz-column-gap: 2rem;
         column-gap: 2rem;
  }
}
.choose_quiz .skills__icon {
  width: 60%;
}
@media (max-width: 599px) {
  .choose_quiz .skills__icon {
    width: 40%;
  }
}

.circles {
  --colors: #f94144, #f3722c, #f8961e, #f9844a, #f9c74f, #90be6d, #43aa8b, #4d908e, #577590, #277da1;
  --min-radius: 20;
  --max-radius: 100;
  --num-circles: 30;
  --min-opacity: 10;
  --max-opacity: 50;
  --seed: 42;
  background-image: paint(circles);
  transition: --num-circles 0.5s ease-in-out;
}

.circles:hover {
  --num-circles: 20;
}

@property --num-circles {
  syntax: "<number>";
  initial-value: 5;
  inherits: false;
}/*# sourceMappingURL=style.css.map */